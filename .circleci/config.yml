version: 2.1
jobs:
  build:
    working_directory: /go/src/github.com/argoproj/argo-rollouts
    docker:
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.13.1
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS
      - run: go get github.com/jstemmer/go-junit-report
      - run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.23.1
      - run:
          name: Install kustomize
          command: |
            curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
            sudo mv kustomize /usr/local/bin/
      - restore_cache:
          keys:
            - v3-pkg-cache-{{ checksum "go.mod" }}
      - run:
          name: Run tests
          command: |
            set -x
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make test | tee ${TEST_RESULTS}/go-test.out
      - store_test_results:
          path: $TEST_RESULTS
      - run:
          name: Uploading code coverage
          command: bash <(curl -s https://codecov.io/bash) -f coverage.out
          # This occasionally takes 2m
          background: true
      - run:
          command: make lint
      - run:
          name: Check nothing has changed after lint
          command: git diff --exit-code
      - save_cache:
          key: v3-pkg-cache-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod/
            - ~/.cache/go-build/
workflows:
  version: 2
  workflow:
    jobs:
      - build
