name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Git tag to build release from
        required: true
      update_stable_tag:
        description: 'Update stable tag'
        required: true
        type: boolean
        default: 'false'
permissions:
  contents: read

jobs:
  release-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Get SHA
        id: get-sha
        run: echo "::set-output name=sha::$(git log -1 --format='%H')"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [worker.oci]
            gc = false

      - name: Print Disk Usage
        run: |
          df -ah
          docker buildx du

      - name: Docker meta (controller)
        id: controller-meta
        uses: docker/metadata-action@v4
        with:
          images: |
            quay.io/argoproj/argo-rollouts
          # ghcr.io/argoproj/argo-rollouts
          tags: |
            type=semver,pattern={{version}},prefix=v,value=${{ github.event.inputs.tag }}
          flavor: |
            latest=false

      - name: Docker meta (plugin)
        id: plugin-meta
        uses: docker/metadata-action@v4
        with:
          images: |
            quay.io/argoproj/kubectl-argo-rollouts
          #  ghcr.io/argoproj/kubectl-argo-rollouts
          tags: |
            type=semver,pattern={{version}},prefix=v,value=${{ github.event.inputs.tag }}
          flavor: |
            latest=false

      # - name: Login to GitHub Container Registry
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Quay.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Build and push (controller-image)
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.controller-meta.outputs.tags }}
          provenance: false
          sbom: false

      - name: Build and push (plugin-image)
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          context: .
          target: kubectl-argo-rollouts
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.plugin-meta.outputs.tags }}
          provenance: false
          sbom: false


  release-artifacts:
    permissions:
      contents: write  # for softprops/action-gh-release to create GitHub release
    runs-on: ubuntu-latest
    needs: release-images

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Generate release artifacts
        run: |
          make release-plugins
          make checksums
          make manifests IMAGE_TAG=${{ github.event.inputs.tag }}

      - name: Generate SBOM (spdx)
        id: spdx-builder
        env:
          # defines the spdx/spdx-sbom-generator version to use.
          SPDX_GEN_VERSION: v0.0.13
          # defines the sigs.k8s.io/bom version to use.
          SIGS_BOM_VERSION: v0.2.1
          # comma delimited list of project relative folders to inspect for package
          # managers (gomod, yarn, npm).
          PROJECT_FOLDERS: ".,./ui"
          # full qualified name of the docker image to be inspected
          DOCKER_IMAGE: quay.io/argoproj/argo-rollouts:${{ github.event.inputs.tag }}

        run: |
          yarn install --cwd ./ui
          go install github.com/spdx/spdx-sbom-generator/cmd/generator@$SPDX_GEN_VERSION
          go install sigs.k8s.io/bom/cmd/bom@$SIGS_BOM_VERSION

          # Generate SPDX for project dependencies analyzing package managers
          for folder in $(echo $PROJECT_FOLDERS | sed "s/,/ /g")
          do
            generator -p $folder -o /tmp
          done

          # Generate SPDX for binaries analyzing the docker image
          if [[ ! -z $DOCKER_IMAGE ]]; then
            bom generate -o /tmp/bom-docker-image.spdx -i $DOCKER_IMAGE
          fi

          cd /tmp && tar -zcf sbom.tar.gz *.spdx

      - name: Login to Quay.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Install cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.13.1'

      - name: Install crane to get digest of image
        uses: imjasonh/setup-crane@v0.3

      - name: Get digest of controller-image
        run: |
          echo "CONTROLLER_DIGEST=$(crane digest quay.io/argoproj/argo-rollouts:${{ github.event.inputs.tag }})" >> $GITHUB_ENV

      - name: Get digest of plugin-image
        run: |
          echo "PLUGIN_DIGEST=$(crane digest quay.io/argoproj/kubectl-argo-rollouts:${{ github.event.inputs.tag }})" >> $GITHUB_ENV

      - name: Sign Argo Rollouts Images
        run: |
          cosign sign --key env://COSIGN_PRIVATE_KEY quay.io/argoproj/argo-rollouts@${{ env.CONTROLLER_DIGEST }}
          cosign sign --key env://COSIGN_PRIVATE_KEY quay.io/argoproj/kubectl-argo-rollouts@${{ env.PLUGIN_DIGEST }}
        env:
          COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}

      - name: Sign checksums and create public key for release assets
        run: |
          cosign sign-blob --key env://COSIGN_PRIVATE_KEY ./dist/argo-rollouts-checksums.txt > ./dist/argo-rollouts-checksums.sig
          cosign public-key --key env://COSIGN_PRIVATE_KEY > ./dist/argo-rollouts-cosign.pub
          cosign sign-blob --key env://COSIGN_PRIVATE_KEY /tmp/sbom.tar.gz > /tmp/sbom.tar.gz.sig
          # Displays the public key to share.
          cosign public-key --key env://COSIGN_PRIVATE_KEY
        env:
          COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}

      - name: update stable tag for docs
        run: |
          git tag -f stable ${{ github.event.inputs.tag }}
          git push -f origin stable
        if:  ${{ inputs.update_stable_tag }}

      - name: Draft release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag }}
          draft: true
          files: |
            dist/kubectl-argo-rollouts-linux-amd64
            dist/kubectl-argo-rollouts-linux-arm64
            dist/kubectl-argo-rollouts-darwin-amd64
            dist/kubectl-argo-rollouts-darwin-arm64
            dist/kubectl-argo-rollouts-windows-amd64
            dist/argo-rollouts-checksums.txt
            dist/argo-rollouts-checksums.sig
            dist/argo-rollouts-cosign.pub
            manifests/dashboard-install.yaml
            manifests/install.yaml
            manifests/namespace-install.yaml
            manifests/notifications-install.yaml
            docs/features/kustomize/rollout_cr_schema.json
            /tmp/sbom.tar.gz
            /tmp/sbom.tar.gz.sig
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
