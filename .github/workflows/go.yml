name: Go
on:
  push:
    branches:
      - "master"
      - "release-*"
  pull_request:
    branches:
      - "master"
jobs:
  lint-go:
    name: Lint Go code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.30
          args: --timeout 5m
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Restore go build cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}

      - name: Download all Go modules
        run: |
          go mod download

      - name: Compile all packages
        run: make controller plugin

      - name: Test
        run: go test -failfast -covermode=count -coverprofile=coverage.out ./...

      - name: Generate code coverage artifacts
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage.out

      - name: Upload code coverage information to codecov.io
        uses: codecov/codecov-action@v1
        with:
          file: coverage.out

  codegen:
    name: Verify Codegen
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      PROTOC_ZIP: protoc-3.12.3-linux-x86_64.zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: 1.16.2
      - uses: actions/cache@v2
        with:
          path: /home/runner/.cache/go-build
          key: GOCACHE-${{ hashFiles('**/go.mod') }}
      - uses: actions/cache@v2
        with:
          path: /home/runner/go/pkg/mod
          key: GOMODCACHE-${{ hashFiles('**/go.mod') }}
      - uses: actions/cache@v2
        with:
          path: /home/runner/go/bin
          key: go-bin-v1-${{ hashFiles('**/go.mod') }}
      - uses: actions/cache@v2
        with:
          path: protoc-3.12.3-linux-x86_64.zip
          key: protoc-3.12.3-linux-x86_64.zip
      - name: Install protoc
        run: |
          set -eux -o pipefail
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.12.3/$PROTOC_ZIP
          sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
          sudo unzip -o $PROTOC_ZIP -d /usr/local 'include/*'
          sudo chmod +x /usr/local/bin/protoc
          sudo find /usr/local/include -type f | xargs sudo chmod a+r
          sudo find /usr/local/include -type d | xargs sudo chmod a+rx
          ls /usr/local/include/google/protobuf/

      - name: Add ~/go/bin to PATH
        run: |
          echo "/home/runner/go/bin" >> $GITHUB_PATH
      - name: Add /usr/local/bin to PATH
        run: |
          echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Create links
        run: |
          mkdir -p ~/go/src/github.com/argoproj
          cp -a ../argo-rollouts ~/go/src/github.com/argoproj

      - name: Vendor and Download
        run: |
          go mod vendor -v
          go mod download

      - name: Install UI code generator
        run: |
          wget https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/3.0.25/swagger-codegen-cli-3.0.25.jar -O swagger-codegen-cli.jar
          echo "#!/usr/bin/java -jar" > swagger-codegen
          cat swagger-codegen-cli.jar >> swagger-codegen
          chmod +x swagger-codegen
          sudo mv swagger-codegen /usr/local/bin/swagger-codegen
          rm swagger-codegen-cli.jar

      - uses: actions/setup-java@v2
        with:
          java-version: "9.0.4"

      - name: Run codegen
        run: |
          make codegen
          make manifests

      - name: Ensure nothing changed
        run: git diff --exit-code
