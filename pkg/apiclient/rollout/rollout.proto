syntax = "proto3";
option go_package = "github.com/argoproj/argo-rollouts/pkg/apiclient/rollout";

import "google/api/annotations.proto";
import "github.com/argoproj/argo-rollouts/pkg/apis/rollouts/v1alpha1/generated.proto";
import "google/protobuf/empty.proto";

package rollout;

message RolloutQuery {
    string name = 1;
}

message SetImageQuery {
    string rollout = 1;
    string container = 2;
    string image = 3;
    string tag = 4;
}

message UndoQuery {
    string rollout = 1;
    int64 revision = 2;
}

message RolloutWatchEvent {
    string type = 1;
    github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutInfo rolloutInfo = 2;
}

message NamespaceInfo {
    string namespace = 1;
}

message RolloutInfoList {
    repeated github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutInfo rollouts = 1;
}

service RolloutService {
    // Get returns a rollout
    rpc GetRollout(RolloutQuery) returns (github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutInfo) {
        option (google.api.http).get = "/api/v1/rollout/{name}";
    }

    rpc WatchRollout(RolloutQuery) returns (stream github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutInfo) {
        option (google.api.http).get = "/api/v1/rollout/watch/{name}";
    }

    rpc ListRollouts(google.protobuf.Empty) returns (RolloutInfoList) {
        option (google.api.http).get = "/api/v1/rollouts";
    }

    rpc WatchRollouts(google.protobuf.Empty) returns (stream RolloutWatchEvent) {
        option (google.api.http).get = "/api/v1/rollouts/watch";
    }

    rpc GetNamespace(google.protobuf.Empty) returns (NamespaceInfo) {
        option (google.api.http).get = "/api/v1/namespace";
    }

    rpc RestartRollout(RolloutQuery) returns (google.protobuf.Empty) {
        option (google.api.http).get = "/api/v1/rollout/restart/{name}";
    }

    rpc PromoteRollout(RolloutQuery) returns (google.protobuf.Empty) {
        option (google.api.http).get = "/api/v1/rollout/promote/{name}";
    }

    rpc AbortRollout(RolloutQuery) returns (google.protobuf.Empty) {
        option (google.api.http).get = "/api/v1/rollout/abort/{name}";
    }

    rpc SetRolloutImage(SetImageQuery) returns (google.protobuf.Empty) {
        option (google.api.http).get = "/api/v1/rollout/set/{rollout}/{container}/{image=**}/{tag}";
    }

    rpc UndoRollout(UndoQuery) returns (google.protobuf.Empty) {
        option (google.api.http).get = "/api/v1/rollout/undo/{rollout}/{revision}";
    }

    rpc RetryRollout(RolloutQuery) returns (google.protobuf.Empty) {
        option (google.api.http).get = "/api/v1/rollout/retry/{name}";
    }
}