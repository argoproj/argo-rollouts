{
  "swagger": "2.0",
  "info": {
    "title": "pkg/apiclient/rollout/rollout.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/namespace": {
      "get": {
        "operationId": "GetNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rollout.NamespaceInfo"
            }
          }
        },
        "tags": [
          "RolloutService"
        ]
      }
    },
    "/api/v1/rollout/abort/{name}": {
      "get": {
        "operationId": "AbortRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RolloutService"
        ]
      }
    },
    "/api/v1/rollout/promote/{name}": {
      "get": {
        "operationId": "PromoteRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RolloutService"
        ]
      }
    },
    "/api/v1/rollout/restart/{name}": {
      "get": {
        "operationId": "RestartRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RolloutService"
        ]
      }
    },
    "/api/v1/rollout/retry/{name}": {
      "get": {
        "operationId": "RetryRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RolloutService"
        ]
      }
    },
    "/api/v1/rollout/set/{rollout}/{container}/{image}/{tag}": {
      "get": {
        "operationId": "SetRolloutImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "rollout",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "container",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RolloutService"
        ]
      }
    },
    "/api/v1/rollout/undo/{rollout}/{revision}": {
      "get": {
        "operationId": "UndoRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "rollout",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "RolloutService"
        ]
      }
    },
    "/api/v1/rollout/watch/{name}": {
      "get": {
        "operationId": "WatchRollout",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutInfo"
                },
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                }
              },
              "title": "Stream result of github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutInfo"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RolloutService"
        ]
      }
    },
    "/api/v1/rollout/{name}": {
      "get": {
        "summary": "Get returns a rollout",
        "operationId": "GetRollout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutInfo"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RolloutService"
        ]
      }
    },
    "/api/v1/rollouts": {
      "get": {
        "operationId": "ListRollouts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rollout.RolloutInfoList"
            }
          }
        },
        "tags": [
          "RolloutService"
        ]
      }
    },
    "/api/v1/rollouts/watch": {
      "get": {
        "operationId": "WatchRollouts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/rollout.RolloutWatchEvent"
                },
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                }
              },
              "title": "Stream result of rollout.RolloutWatchEvent"
            }
          }
        },
        "tags": [
          "RolloutService"
        ]
      }
    }
  },
  "definitions": {
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.AnalysisRunArgument": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name argument name"
        },
        "value": {
          "type": "string",
          "title": "Value a hardcoded value for the argument. This field is a one of field with valueFrom"
        },
        "valueFrom": {
          "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.ArgumentValueFrom",
          "title": "ValueFrom A reference to where the value is stored. This field is a one of field with valueFrom"
        }
      },
      "title": "AnalysisRunArgument argument to add to analysisRun"
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.AnalysisRunInfo": {
      "type": "object",
      "properties": {
        "objectMeta": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "icon": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "successful": {
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "inconclusive": {
          "type": "integer",
          "format": "int32"
        },
        "error": {
          "type": "integer",
          "format": "int32"
        },
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.JobInfo"
          }
        }
      }
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.ArgumentValueFrom": {
      "type": "object",
      "properties": {
        "podTemplateHashValue": {
          "type": "string",
          "title": "PodTemplateHashValue gets the value from one of the children ReplicaSet's Pod Template Hash"
        },
        "fieldRef": {
          "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.FieldRef",
          "title": "FieldRef"
        }
      },
      "title": "ArgumentValueFrom defines references to fields within resources to grab for the value (i.e. Pod Template Hash)"
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.CanaryStep": {
      "type": "object",
      "properties": {
        "setWeight": {
          "type": "integer",
          "format": "int32",
          "title": "SetWeight sets what percentage of the newRS should receive"
        },
        "pause": {
          "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutPause",
          "title": "Pause freezes the rollout by setting spec.Paused to true.\nA Rollout will resume when spec.Paused is reset to false.\n+optional"
        },
        "experiment": {
          "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutExperimentStep",
          "title": "Experiment defines the experiment object that should be created"
        },
        "analysis": {
          "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutAnalysis",
          "title": "Analysis defines the AnalysisRun that will run for a step"
        },
        "setCanaryScale": {
          "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.SetCanaryScale",
          "title": "SetCanaryScale defines how to scale the newRS without changing traffic weight\n+optional"
        }
      },
      "description": "CanaryStep defines a step of a canary deployment."
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.ContainerInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.ExperimentInfo": {
      "type": "object",
      "properties": {
        "objectMeta": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "icon": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "replicaSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.ReplicaSetInfo"
          }
        },
        "analysisRuns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.AnalysisRunInfo"
          }
        }
      }
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.FieldRef": {
      "type": "object",
      "properties": {
        "fieldPath": {
          "type": "string",
          "title": "Required: Path of the field to select in the specified API version"
        }
      }
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.JobInfo": {
      "type": "object",
      "properties": {
        "objectMeta": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "status": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.PodInfo": {
      "type": "object",
      "properties": {
        "objectMeta": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "status": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "ready": {
          "type": "string"
        },
        "restarts": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.PodTemplateMetadata": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Labels Additional labels to add to the experiment\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations additional annotations to add to the experiment\n+optional"
        }
      },
      "title": "PodTemplateMetadata extra labels to add to the template"
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.ReplicaSetInfo": {
      "type": "object",
      "properties": {
        "objectMeta": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "status": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "stable": {
          "type": "boolean",
          "format": "boolean"
        },
        "canary": {
          "type": "boolean",
          "format": "boolean"
        },
        "active": {
          "type": "boolean",
          "format": "boolean"
        },
        "preview": {
          "type": "boolean",
          "format": "boolean"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "template": {
          "type": "string"
        },
        "scaleDownDeadline": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.PodInfo"
          }
        }
      }
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutAnalysis": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutAnalysisTemplate"
          },
          "title": "Templates reference to a list of analysis templates to combine for an AnalysisRun"
        },
        "args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.AnalysisRunArgument"
          },
          "title": "Args the arguments that will be added to the AnalysisRuns\n+patchMergeKey=name\n+patchStrategy=merge"
        }
      },
      "title": "RolloutAnalysis defines a template that is used to create a analysisRun"
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutAnalysisTemplate": {
      "type": "object",
      "properties": {
        "templateName": {
          "type": "string",
          "title": "TemplateName name of template to use in AnalysisRun\n+optional"
        },
        "clusterScope": {
          "type": "boolean",
          "format": "boolean",
          "title": "Whether to look for the templateName at cluster scope or namespace scope\n+optional"
        }
      }
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutExperimentStep": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutExperimentTemplate"
          },
          "title": "Templates what templates that should be added to the experiment. Should be non-nil\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "duration": {
          "type": "string",
          "title": "Duration is a duration string (e.g. 30s, 5m, 1h) that the experiment should run for\n+optional"
        },
        "analyses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutExperimentStepAnalysisTemplateRef"
          },
          "title": "Analyses reference which analysis templates to run with the experiment\n+patchMergeKey=name\n+patchStrategy=merge"
        }
      },
      "title": "RolloutExperimentStep defines a template that is used to create a experiment for a step"
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutExperimentStepAnalysisTemplateRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is a name for this analysis template invocation"
        },
        "templateName": {
          "type": "string",
          "title": "TemplateName reference of the AnalysisTemplate name used by the Experiment to create the run"
        },
        "clusterScope": {
          "type": "boolean",
          "format": "boolean",
          "title": "Whether to look for the templateName at cluster scope or namespace scope\n+optional"
        },
        "args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.AnalysisRunArgument"
          },
          "title": "Args the arguments that will be added to the AnalysisRuns\n+patchMergeKey=name\n+patchStrategy=merge"
        },
        "requiredForCompletion": {
          "type": "boolean",
          "format": "boolean",
          "title": "RequiredForCompletion blocks the Experiment from completing until the analysis has completed"
        }
      }
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutExperimentTemplate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name description of template that passed to the template"
        },
        "specRef": {
          "type": "string",
          "title": "SpecRef indicates where the rollout should get the RS template from"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Replicas replica count for the template\n+optional"
        },
        "metadata": {
          "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.PodTemplateMetadata",
          "title": "Metadata sets labels and annotations to use for the RS created from the template\n+optional"
        },
        "selector": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "title": "Selector overrides the selector to be used for the template's ReplicaSet. If omitted, will\nuse the same selector as the Rollout\n+optional"
        }
      },
      "title": "RolloutExperimentTemplate defines the template used to create experiments for the Rollout's experiment canary step"
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutInfo": {
      "type": "object",
      "properties": {
        "objectMeta": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        },
        "step": {
          "type": "string"
        },
        "setWeight": {
          "type": "string"
        },
        "actualWeight": {
          "type": "string"
        },
        "ready": {
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "desired": {
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "type": "integer",
          "format": "int32"
        },
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "restartedAt": {
          "type": "string"
        },
        "generation": {
          "type": "string"
        },
        "replicaSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.ReplicaSetInfo"
          }
        },
        "experiments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.ExperimentInfo"
          }
        },
        "analysisRuns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.AnalysisRunInfo"
          }
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.ContainerInfo"
          }
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.CanaryStep"
          }
        }
      },
      "title": "RolloutInfo is information about a rollout"
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutPause": {
      "type": "object",
      "properties": {
        "duration": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString",
          "title": "Duration the amount of time to wait before moving to the next step.\n+optional"
        }
      },
      "title": "RolloutPause defines a pause stage for a rollout"
    },
    "github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.SetCanaryScale": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer",
          "format": "int32",
          "title": "Weight sets the percentage of replicas the newRS should have\n+optional"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "title": "Replicas sets the number of replicas the newRS should have\n+optional"
        },
        "matchTrafficWeight": {
          "type": "boolean",
          "format": "boolean",
          "title": "MatchTrafficWeight cancels out previously set Replicas or Weight, effectively activating SetWeight\n+optional"
        }
      },
      "title": "SetCanaryScale defines how to scale the newRS without changing traffic weight"
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.StreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.FieldsV1": {
      "type": "object",
      "properties": {
        "Raw": {
          "type": "string",
          "format": "byte",
          "description": "Raw is the underlying serialization of this object."
        }
      },
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map\n'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item\n'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list\n'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "type": "object",
      "properties": {
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
        },
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
          },
          "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
        }
      },
      "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge"
        },
        "operator": {
          "type": "string",
          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
        }
      },
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "manager": {
          "type": "string",
          "description": "Manager is an identifier of the workflow managing these fields."
        },
        "operation": {
          "type": "string",
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
        },
        "time": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time",
          "title": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'\n+optional"
        },
        "fieldsType": {
          "type": "string",
          "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
        },
        "fieldsV1": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.FieldsV1",
          "title": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional"
        }
      },
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to."
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        },
        "clusterName": {
          "type": "string",
          "title": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional"
        },
        "managedFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          },
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create."
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "format": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "format": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
        }
      },
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field."
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.Time": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64",
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      },
      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "k8s.io.apimachinery.pkg.util.intstr.IntOrString": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "format": "int64"
        },
        "intVal": {
          "type": "integer",
          "format": "int32"
        },
        "strVal": {
          "type": "string"
        }
      },
      "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
      "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString"
    },
    "rollout.NamespaceInfo": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      }
    },
    "rollout.RolloutInfoList": {
      "type": "object",
      "properties": {
        "rollouts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutInfo"
          }
        }
      }
    },
    "rollout.RolloutWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "rolloutInfo": {
          "$ref": "#/definitions/github.com.argoproj.argo_rollouts.pkg.apis.rollouts.v1alpha1.RolloutInfo"
        }
      }
    }
  }
}
