apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-robot
---
apiVersion: v1
data:
  FOO: BAR
kind: ConfigMap
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-guestbook-cm-m2mg5mb749
---
apiVersion: v1
data:
  password: UGE1NXcwcmQ=
kind: Secret
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-guestbook-secret-ccbkcc9264
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-guestbook-canary-svc
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: guestbook
    foo: bar
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-guestbook-stable-svc
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: guestbook
    foo: bar
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-deployment
spec:
  selector:
    matchLabels:
      app: nginx
      foo: bar
  template:
    metadata:
      annotations:
        foo: bar
      labels:
        app: nginx
        foo: bar
    spec:
      containers:
      - image: nginx:1.14.2
        name: nginx
        ports:
        - containerPort: 80
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-random-fail
spec:
  metrics:
  - failureLimit: 1
    interval: 5s
    name: random-fail
    provider:
      job:
        spec:
          backoffLimit: 0
          template:
            spec:
              containers:
              - command:
                - ping my-guestbook-stable-svc
                image: alpine:3.8
                name: sleep
              restartPolicy: Never
              serviceAccountName: my-robot
              volumes:
              - configMap:
                  name: my-guestbook-cm-m2mg5mb749
                name: config-volume
              - name: secret-volume
                secret:
                  secretName: my-guestbook-secret-ccbkcc9264
---
apiVersion: argoproj.io/v1alpha1
kind: Experiment
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-experiment
spec:
  analyses:
  - name: random-fail
    templateName: my-random-fail
  templates:
  - metadata:
      labels:
        app: guestbook
    name: foo
    template:
      spec:
        containers:
        - command:
          - ping my-guestbook-stable-svc
          image: guestbook:v2
          name: guestbook
        serviceAccountName: my-robot
        volumes:
        - configMap:
            name: my-guestbook-cm-m2mg5mb749
          name: config-volume
        - name: secret-volume
          secret:
            secretName: my-guestbook-secret-ccbkcc9264
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-guestbook
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      foo: bar
  strategy:
    canary:
      analysis:
        templates:
        - templateName: my-random-fail
      canaryService: my-guestbook-canary-svc
      stableService: my-guestbook-stable-svc
      steps:
      - experiment:
          analyses:
          - name: random-fail
            templateName: my-random-fail
          templates:
          - name: canary
            specRef: canary
      - analysis:
          templates:
          - templateName: my-random-fail
      trafficRouting:
        alb:
          ingress: my-networking-ingress
        ambassador:
          mappings:
          - my-mapping
        istio:
          destinationRule:
            name: my-guestbook-destrule
          virtualService:
            name: my-guestbook-vsvc
            routes:
            - primary
        nginx:
          stableIngress: my-extensions-ingress
  template:
    metadata:
      annotations:
        foo: bar
      labels:
        app: guestbook
        foo: bar
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: guestbook
                  foo: bar
      containers:
      - command:
        - ping my-guestbook-stable-svc
        env:
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: my-guestbook-secret-ccbkcc9264
        - name: FOO
          valueFrom:
            configMapKeyRef:
              key: FOO
              name: my-guestbook-cm-m2mg5mb749
        image: guestbook-patched:v1
        name: guestbook
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /etc/secrets
          name: secret-volume
      serviceAccountName: my-robot
      volumes:
      - configMap:
          name: my-guestbook-cm-m2mg5mb749
        name: config-volume
      - name: secret-volume
        secret:
          secretName: my-guestbook-secret-ccbkcc9264
  workloadRef:
    apiVersion: apps/v1
    kind: Deployment
    name: my-deployment
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-hpa
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: cpu
      targetAverageUtilization: 50
    type: Resource
  minReplicas: 3
  scaleTargetRef:
    apiVersion: argoproj.io/v1alpha1
    kind: Rollout
    name: my-guestbook
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-extensions-ingress
spec:
  rules:
  - host: www.mysite.com
    http:
      paths:
      - backend:
          serviceName: website
          servicePort: 80
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-mapping
spec:
  prefix: /someapp
  rewrite: /
  service: someapp-stable:80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-guestbook-destrule
spec:
  host: guestbook
  subsets:
  - labels:
      app: guestbook
    name: canary
  - labels:
      app: guestbook
    name: stable
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-guestbook-vsvc
spec:
  gateways:
  - istio-rollout-gateway
  hosts:
  - istio-rollout.dev.argoproj.io
  http:
  - name: primary
    route:
    - destination:
        host: guestbook-stable-svc
      weight: 100
    - destination:
        host: guestbook-canary-svc
      weight: 0
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    foo: bar
  labels:
    foo: bar
  name: my-networking-ingress
spec:
  rules:
  - host: www.mysite.com
    http:
      paths:
      - backend:
          service:
            name: website
            port:
              number: 80
