apiVersion: v1
kind: Service
metadata:
  name: dynamic-stable-scale-root
spec:
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: dynamic-stable-scale
---
apiVersion: v1
kind: Service
metadata:
  name: dynamic-stable-scale-canary
spec:
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: dynamic-stable-scale
---
apiVersion: v1
kind: Service
metadata:
  name: dynamic-stable-scale-stable
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: dynamic-stable-scale
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dynamic-stable-scale-ingress
  annotations:
    kubernetes.io/ingress.class: alb
spec:
  rules:
  - http:
      paths:
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: dynamic-stable-scale-root
            port:
              name: use-annotation
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: dynamic-stable-scale
spec:
  replicas: 4
  selector:
    matchLabels:
      app: dynamic-stable-scale
  template:
    metadata:
      labels:
        app: dynamic-stable-scale
    spec:
      readinessGates:
      - conditionType: argoproj.io/e2e-readiness
      containers:
      - name: dynamic-stable-scale
        image: nginx:1.19-alpine
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        resources:
          requests:
            memory: 16Mi
            cpu: 5m
  strategy:
    canary:
      dynamicStableScale: true
      canaryService: dynamic-stable-scale-canary
      stableService: dynamic-stable-scale-stable
      steps:
        - setWeight: 25
        - pause: {}
        - setWeight: 75
        - pause: {}
      trafficRouting:
        alb:
          ingress: dynamic-stable-scale-ingress
          rootService: dynamic-stable-scale-root
          servicePort: 80