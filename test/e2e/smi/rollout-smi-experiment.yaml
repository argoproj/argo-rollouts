apiVersion: v1
kind: Service
metadata:
  name: rollout-smi-experiment-canary
spec:
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: rollout-smi-experiment
    # This selector will be updated with the pod-template-hash of the canary ReplicaSet. e.g.:
    # rollouts-pod-template-hash: 7bf84f9696
---
apiVersion: v1
kind: Service
metadata:
  name: rollout-smi-experiment-stable
spec:
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: rollout-smi-experiment
    # This selector will be updated with the pod-template-hash of the stable ReplicaSet. e.g.:
    # rollouts-pod-template-hash: 789746c88d
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rollout-smi-experiment-stable
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: rollout-smi-experiment.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              # Reference to a Service name, also specified in the Rollout spec.strategy.canary.stableService field
              service:
                name: rollout-smi-experiment-stable
                port:
                  number: 80
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rollout-smi-experiment
spec:
  replicas: 1
  strategy:
    canary:
      canaryService: rollout-smi-experiment-canary
      stableService: rollout-smi-experiment-stable
      trafficRouting:
        smi:
          trafficSplitName: rollout-smi-experiment-trafficsplit
      steps:
      - setWeight: 5
      - experiment:
          templates:
            - name: experiment-smi
              specRef: canary
              weight: 5
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rollout-smi-experiment
  template:
    metadata:
      labels:
        app: rollout-smi-experiment
    spec:
      containers:
      - name: rollout-smi-experiment
        image: nginx:1.19-alpine
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        resources:
          requests:
            memory: 16Mi
            cpu: 5m
