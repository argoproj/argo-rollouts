# This is an auto-generated file. DO NOT EDIT
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: rollouts.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: Rollout
    plural: rollouts
    shortNames:
    - ro
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata: {}
        spec:
          description: RolloutSpec is the spec for a Rollout resource
          properties:
            minReadySeconds:
              description: Minimum number of seconds for which a newly created pod
                should be ready without any of its container crashing, for it to be
                considered available. Defaults to 0 (pod will be considered available
                as soon as it is ready)
              format: int32
              type: integer
            replicas:
              description: Number of desired pods. This is a pointer to distinguish
                between explicit zero and not specified. Defaults to 1.
              format: int32
              type: integer
            revisionHistoryLimit:
              description: The number of old ReplicaSets to retain. This is a pointer
                to distinguish between explicit zero and not specified. This is set
                to the max value of int32 (i.e. 2147483647) by default, which means
                "retaining all old ReplicaSets".
              format: int32
              type: integer
            selector: {}
            strategy:
              description: RolloutStrategy defines strategy to apply during next rollout
              properties:
                blueGreen:
                  description: BlueGreenStrategy defines parameters for Blue Green
                    deployment
                  properties:
                    activeService:
                      description: Name of the service that the rollout modifies as
                        the active service.
                      type: string
                    previewService:
                      description: Name of the service that the rollout modifies as
                        the preview service.
                      type: string
                  required:
                  - activeService
                canary:
                  description: ReplicaBasedCanaryStrategy defines parameters for a
                    Replica Based Canary
                  properties:
                    maxSurge:
                      anyOf:
                      - type: string
                      - type: integer
                    maxUnavailable:
                      anyOf:
                      - type: string
                      - type: integer
                    steps:
                      description: Steps define the order of phases to execute the
                        canary deployment
                      items:
                        description: CanaryStep defines a step of a canary deployment.
                        properties:
                          pause: {}
                          setWeight:
                            description: SetWeight sets what percentage of the newRS
                              should receive
                            format: int32
                            type: integer
                          wait:
                            description: Wait the amount of time to run the canary
                              instance before moving to the next step.
                            format: int32
                            type: integer
                      type: array
                type:
                  type: string
              required:
              - type
            template: {}
          required:
          - selector
          - template
        status:
          description: RolloutStatus is the status for a Rollout resource
          properties:
            activeSelector:
              description: ActiveSelector indicates which replicas set the active
                service is serving traffic to
              type: string
            availableReplicas:
              description: Total number of available pods (ready for at least minReadySeconds)
                targeted by this rollout.
              format: int32
              type: integer
            canaryStatus:
              description: CanaryStatus fields that only pertain to the canary rollout
              properties:
                stableRS:
                  description: StableRS indicates the last replicaset that walked
                    through all the canary steps or was the only replicaset
                  type: string
            collisionCount:
              description: Count of hash collisions for the Rollout. The Rollout controller
                uses this field as a collision avoidance mechanism when it needs to
                create the name for the newest ReplicaSet.
              format: int32
              type: integer
            conditions:
              description: Conditions a list of conditions a rollout can have.
              items:
                description: RolloutCondition describes the state of a rollout at
                  a certain point.
                properties:
                  lastTransitionTime: {}
                  lastUpdateTime: {}
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of deployment condition.
                    type: string
                required:
                - type
                - status
                - lastUpdateTime
                - lastTransitionTime
                - reason
                - message
              type: array
            currentPodHash:
              description: CurrentPodHash the hash of the current pod template
              type: string
            currentStepIndex:
              description: CurrentStepIndex defines the current step of the rollout
                is on. If the current step index is null, the controller will execute
                the rollout.
              format: int32
              type: integer
            observedGeneration:
              description: The generation observed by the rollout controller by taking
                a hash of the spec.
              type: string
            previewSelector:
              description: PreviewSelector indicates which replicas set the preview
                service is serving traffic to
              type: string
            readyReplicas:
              description: Total number of ready pods targeted by this rollout.
              format: int32
              type: integer
            replicas:
              description: Total number of non-terminated pods targeted by this rollout
                (their labels match the selector).
              format: int32
              type: integer
            setPause:
              description: Indicates if the controller set the Spec.Pause field or
                if the user did
              type: boolean
            updatedReplicas:
              description: Total number of non-terminated pods targeted by this rollout
                that have the desired template spec.
              format: int32
              type: integer
            verifyingPreview:
              description: VerifyingPreview indicates the rollout is verifying the
                replicas set being served traffic from the preview service. User will
                need to edit this field to continue the rollout.
              type: boolean
  version: v1alpha1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-rollouts
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-rollouts-role
rules:
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - watch
  - get
  - list
  - update
  - patch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: argo-aggregate-to-admin
rules:
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: argo-aggregate-to-edit
rules:
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: argo-aggregate-to-view
rules:
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-rollouts-clusterrole
rules:
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - watch
  - get
  - list
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - watch
  - get
  - list
  - patch
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - list
  - update
  - watch
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-rollouts-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-rollouts-role
subjects:
- kind: ServiceAccount
  name: argo-rollouts
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-rollouts-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-rollouts-clusterrole
subjects:
- kind: ServiceAccount
  name: argo-rollouts
  namespace: argo-rollouts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-rollouts
spec:
  selector:
    matchLabels:
      app: argo-rollouts
  template:
    metadata:
      labels:
        app: argo-rollouts
    spec:
      containers:
      - command:
        - /bin/rollouts-controller
        image: argoproj/argo-rollouts:latest
        imagePullPolicy: Always
        name: argo-rollouts
      serviceAccountName: argo-rollouts
